# This is intended for use with Next.JS' Standalone mode
# So ensure that is set in your project's config.

parameters:
  - name: nodeVersion
    type: string
    default: 20.6.x
  - name: packageName
    type: string
  - name: buildScript
    type: string
    default: build
  - name: packageRoot
    type: string
  - name: includeStaticAssets
    type: boolean
    default: false

steps:
  - bash: |
      if [ -z "$PACKAGE_NAME" ]; then
        echo "##vso[task.logissue type=error;]Missing template parameter \"packageName\""
        echo "##vso[task.complete result=Failed;]"
      fi
      if [ -z "$PACKAGE_ROOT" ]; then
        echo "##vso[task.logissue type=error;]Missing template parameter \"packageRoot\""
        echo "##vso[task.complete result=Failed;]"
      fi
    env:
      PACKAGE_NAME: ${{ parameters.packageName }}
      PACKAGE_ROOT: ${{ parameters.packageRoot }}
    displayName: Check for required parameters

  - task: NodeTool@0
    inputs:
      versionSpec: ${{ parameters.nodeVersion }}
    displayName: Setup Node.js

  - script: npm i --workspaces=false
    workingDirectory: ${{ parameters.packageRoot }}
    displayName: npm install

  - task: Cache@2
    inputs:
      key: nextjs | $(Agent.OS) | ${{ parameters.packageRoot }}/package-lock.json
      path: ${{ parameters.packageRoot }}/.next/cache
    displayName: "Cache .next/cache"

  - script: npm run build --workspaces=false
    workingDirectory: ${{ parameters.packageRoot }}
    displayName: npm run build

  - script: |
      cp -r .next/static .next/standalone/.next/
      cp -r public .next/standalone/
    condition: ${{ eq(parameters.includeStaticAssets, true) }}
    workingDirectory: ${{ parameters.packageRoot }}
    displayName: Copy Static Assets
